// Generated by CoffeeScript 1.6.3
(function() {

  window.onload = function() {
    var i, iso, tile, which, y, z;
    Crafty.init();
    Crafty.sprite(128, "images/sprite.png", {
      grass: [0, 0, 1, 1],
      stone: [1, 0, 1, 1]
    });
    iso = Crafty.isometric.size(128);
    z = 0;
    i = 20;
    while (i >= 0) {
      y = 0;
      while (y < 20) {
        which = Crafty.math.randomInt(0, 1);
        tile = Crafty.e("2D, DOM, " + (!which ? "grass" : "stone") + ", Mouse").attr("z", i + 1 * y + 1).areaMap([64, 0], [128, 32], [128, 96], [64, 128], [0, 96], [0, 32]).bind("Click", function(e) {
          console.log(e.button);
          return this.destroy();
        }).bind("MouseOver", function() {
          if (this.has("grass")) {
            return this.sprite(0, 1, 1, 1);
          } else {
            return this.sprite(1, 1, 1, 1);
          }
        }).bind("MouseOut", function() {
          if (this.has("grass")) {
            return this.sprite(0, 0, 1, 1);
          } else {
            return this.sprite(1, 0, 1, 1);
          }
        });
        iso.place(i, y, 0, tile);
        y++;
      }
      i--;
    }
    return Crafty.addEvent(this, Crafty.stage.elem, "mousedown", function(e) {
      var base, scroll;
      scroll = function(e) {
        var base, dx, dy;
        dx = base.x - e.clientX;
        dy = base.y - e.clientY;
        base = {
          x: e.clientX,
          y: e.clientY
        };
        Crafty.viewport.x -= dx;
        return Crafty.viewport.y -= dy;
      };
      if (e.button > 1) {
        return;
      }
      base = {
        x: e.clientX,
        y: e.clientY
      };
      Crafty.addEvent(this, Crafty.stage.elem, "mousemove", scroll);
      return Crafty.addEvent(this, Crafty.stage.elem, "mouseup", function() {
        return Crafty.removeEvent(this, Crafty.stage.elem, "mousemove", scroll);
      });
    });
  };

}).call(this);
